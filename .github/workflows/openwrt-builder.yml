name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # 初始化环境后添加系统工具验证
    - name: Verify system tools
      run: |
        echo "=== 关键工具版本检查 ==="
        git --version || { echo "Git未安装"; exit 1; }
        gcc --version || { echo "GCC未安装"; exit 1; }
        make --version || { echo "Make未安装"; exit 1; }
        python2 --version || { echo "Python2未安装"; exit 1; }
        python3 --version || { echo "Python3未安装"; exit 1; }
        echo "=== 基础依赖验证通过 ==="

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force || true
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install --no-install-recommends \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython2-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    # 添加源码仓库状态检查
    - name: Check repository health
      working-directory: /workdir/openwrt
      run: |
        echo "=== 仓库状态检查 ==="
        git log -1 --oneline || { echo "仓库克隆异常"; exit 1; }
        [ -d ./scripts ] || { echo "源码目录结构不完整"; exit 1; }
        echo "=== 仓库验证通过 ==="

    - name: Load custom feeds
      working-directory: $GITHUB_WORKSPACE
      run: |
        # 配置文件存在性检查
        [ -f $FEEDS_CONF ] || { echo "缺失feeds配置文件"; exit 1; }
        [ -f $DIY_P1_SH ] || { echo "缺失DIY脚本part1"; exit 1; }
        
        cp $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        ../$DIY_P1_SH

    - name: Update feeds
      working-directory: $GITHUB_WORKSPACE/openwrt
      run: ./scripts/feeds update -a

    - name: Install feeds
      working-directory: $GITHUB_WORKSPACE/openwrt
      run: ./scripts/feeds install -a

    # 添加feeds安装验证
    - name: Verify feeds installation
      working-directory: $GITHUB_WORKSPACE/openwrt
      run: |
        [ -d ./package ] || { echo "Feeds安装失败"; exit 1; }
        [ -f ./feeds.conf.default ] || { echo "Feeds配置丢失"; exit 1; }
        echo "=== Feeds验证通过 ==="

    - name: Load custom configuration
      working-directory: $GITHUB_WORKSPACE
      run: |
        # 配置文件存在性检查
        [ -f $CONFIG_FILE ] || { echo "缺失.config文件"; exit 1; }
        [ -f $DIY_P2_SH ] || { echo "缺失DIY脚本part2"; exit 1; }
        
        [ -d files ] && cp -r files openwrt/files
        cp $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        ../$DIY_P2_SH

    # 添加.config文件验证
    - name: Verify .config
      working-directory: $GITHUB_WORKSPACE/openwrt
      run: |
        [ -f .config ] || { echo ".config文件未生成"; exit 1; }
        grep 'CONFIG_TARGET.*=y' .config || { echo "配置未指定目标设备"; exit 1; }
        echo "=== 配置文件验证通过 ==="

    - name: Download package
      id: package
      working-directory: $GITHUB_WORKSPACE/openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    # 添加存储空间检查
    - name: Pre-compile space check
      run: |
        echo "=== 编译前存储空间检查 ==="
        df -h
        du -sh $GITHUB_WORKSPACE
        echo "========================="

    - name: Compile the firmware
      id: compile
      working-directory: $GITHUB_WORK
